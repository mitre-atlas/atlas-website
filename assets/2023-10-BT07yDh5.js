const c="data:text/markdown;base64,IyMjIyBPY3RvYmVyIDIwMjMKCk5ldyBsYXJnZSBsYW5ndWFnZSBtb2RlbCAoTExNKSBjb250ZW50IGFuZCB1cGRhdGVkIG1pdGlnYXRpb25zLgoKCiMjIyMjIFdlYnNpdGUgdjMuNi4wCgpUaGlzIHdlYnNpdGUgdXBkYXRlIGluY2x1ZGVzIHVwZGF0ZWQgbWl0aWdhdGlvbnMgYW5kIG5ldyB0YWN0aWNzLCB0ZWNobmlxdWVzLCBhbmQgY2FzZSBzdHVkaWVzIGluc3BpcmVkIGJ5IGxhcmdlIGxhbmd1YWdlIG1vZGVscyAoTExNcykuCgoKIyMjIyMgRGF0YSB2NC41LjAKClRoaXMgdmVyc2lvbiBvZiBBVExBUyBkYXRhIGNvbnRhaW5zIDEgbWF0cml4LCAxNCB0YWN0aWNzLCA0NiB0ZWNobmlxdWVzLCAzNiBzdWItdGVjaG5pcXVlcywgMTkgbWl0aWdhdGlvbnMsIGFuZCAyMiBjYXNlIHN0dWRpZXMuCgojIyMjIyMgVGFjdGljcyBhbmQgdGVjaG5pcXVlcwotIEFkZGVkIG5ldyB0YWN0aWNzCiAgKyBbUHJpdmlsZWdlIEVzY2FsYXRpb25dKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RhY3RpY3MvQU1MLlRBMDAxMikKICArIFtDcmVkZW50aWFsIEFjY2Vzc10oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGFjdGljcy9BTUwuVEEwMDEzKQoKLSBBZGRlZCBuZXcgdGVjaG5pcXVlcwogICsgW0RldmVsb3AgQ2FwYWJpbGl0aWVzXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDAxNykKICArIFtEZXZlbG9wIENhcGFiaWxpdGllczogQWR2ZXJzYXJpYWwgTUwgQXR0YWNrc10oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwMTcuMDAwKQogICAgLSBQcmV2aW91c2x5IGtub3duIGFzICJEZXZlbG9wIEFkdmVyc2FyaWFsIE1MIEF0dGFjayBDYXBhYmlsaXRpZXMiCiAgKyBbTExNIFByb21wdCBJbmplY3Rpb25dKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDUxKQogICsgW0xMTSBQcm9tcHQgSW5qZWN0aW9uOiBEaXJlY3RdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDUxLjAwMCkKICArIFtMTE0gUHJvbXB0IEluamVjdGlvbjogSW5kaXJlY3RdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDUxLjAwMSkKICArIFtQaGlzaGluZ10oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwNTIpCiAgKyBbUGhpc2hpbmc6IFNwZWFycGhpc2hpbmcgdmlhIFNvY2lhbCBFbmdpbmVlcmluZyBMTE1dKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDUyLjAwMCkKICArIFtDb21wcm9taXNlIExMTSBQbHVnaW5zXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDA1MykKICArIFtMTE0gSmFpbGJyZWFrXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDA1NCkKICArIFtVbnNlY3VyZWQgQ3JlZGVudGlhbHNdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDU1KQogICsgW0xMTSBNZXRhIFByb21wdCBFeHRyYWN0aW9uXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDA1NikKICArIFtMTE0gRGF0YSBMZWFrYWdlXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDA1NykKICArIFtFeHRlcm5hbCBIYXJtc10oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwNDgpCiAgICAgLSBQcmV2aW91c2x5IHRoaXMgdGVjaG5pcXVlIElEIHdhcyBrbm93biBhcyAiU3lzdGVtIE1pc3VzZSBmb3IgRXh0ZXJuYWwgRWZmZWN0IgogICsgW0V4dGVybmFsIEhhcm1zOiBGaW5hbmNpYWwgSGFybV0oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwNDguMDAwKQogICsgW0V4dGVybmFsIEhhcm1zOiBSZXB1dGF0aW9uYWwgSGFybV0oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwNDguMDAxKQogICsgW0V4dGVybmFsIEhhcm1zOiBTb2NpZXRhbCBIYXJtXShodHRwczovL2F0bGFzLm1pdHJlLm9yZy90ZWNobmlxdWVzL0FNTC5UMDA0OC4wMDIpCiAgKyBbRXh0ZXJuYWwgSGFybXM6IFVzZXIgSGFybV0oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvdGVjaG5pcXVlcy9BTUwuVDAwNDguMDAzKQogICsgW0V4dGVybmFsIEhhcm1zOiBNTCBJbnRlbGxlY3R1YWwgUHJvcGVydHkgVGhlZnRdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3RlY2huaXF1ZXMvQU1MLlQwMDQ4LjAwNCkKICAgICAtIFByZXZpb3VzbHkgd2FzIGEgdG9wLWxldmVsIHRlY2huaXF1ZSAiTUwgSW50ZWxsZWN0dWFsIFByb3BlcnR5IFRoZWZ0Iiwgbm90ZSB0aGUgSUQgY2hhbmdlCgojIyMjIyMgQ2FzZSBzdHVkaWVzCi0gQWRkZWQgbmV3IGNhc2Ugc3R1ZGllcwogICsgW0J5cGFzc2luZyBJRC5tZSBJZGVudGl0eSBWZXJpZmljYXRpb25dKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3N0dWRpZXMvQU1MLkNTMDAxNykKICArIFtBcmJpdHJhcnkgQ29kZSBFeGVjdXRpb24gd2l0aCBHb29nbGUgQ29sYWJdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3N0dWRpZXMvQU1MLkNTMDAxOCkKICArIFtQb2lzb25HUFRdKGh0dHBzOi8vYXRsYXMubWl0cmUub3JnL3N0dWRpZXMvQU1MLkNTMDAxOSkKICArIFtJbmRpcmVjdCBQcm9tcHQgSW5qZWN0aW9uIFRocmVhdHM6IEJpbmcgQ2hhdCBEYXRhIFBpcmF0ZV0oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvc3R1ZGllcy9BTUwuQ1MwMDIwKQogICsgW0NoYXRHUFQgUGx1Z2luIFByaXZhY3kgTGVha10oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvc3R1ZGllcy9BTUwuQ1MwMDIxKQoKLSBSZWZyZXNoZWQgZXhpc3RpbmcgY2FzZSBzdHVkaWVzIHdpdGggTExNIHRlY2huaXF1ZXMKICArIFtBY2hpZXZpbmcgQ29kZSBFeGVjdXRpb24gaW4gTWF0aEdQVCB2aWEgUHJvbXB0IEluamVjdGlvbl0oaHR0cHM6Ly9hdGxhcy5taXRyZS5vcmcvc3R1ZGllcy9BTUwuQ1MwMDE2KQoKIyMjIyMjIE1pdGlnYXRpb25zCkFkZGVkIG1hY2hpbmUgbGVhcm5pbmcgbGlmZWN5Y2xlIHN0YWdlcyBhbmQgbmV3IGNhdGVnb3JpZXMgdG8gbWl0aWdhdGlvbnM=";export{c as default};
